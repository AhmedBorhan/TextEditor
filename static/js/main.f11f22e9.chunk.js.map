{"version":3,"sources":["db-actions.js","App.js","serviceWorker.js","index.js","icons/delete.svg","icons/floppy-disk.svg","icons/find.svg","icons/plus.svg"],"names":["getRules","a","fetch","res","json","result","alert","addRule","rule","text","replace","body","JSON","stringify","checked","headers","Accept","method","console","log","updateRule","id","deleteRule","specialCharacters","findWithRegex","regex","contentBlock","callback","matchArr","start","getText","index","exec","length","SearchHighlight","props","className","children","generateDecorator","highlightTerm","forEach","sc","replaceAll","RegExp","CompositeDecorator","strategy","component","App","React","useState","EditorState","createEmpty","editorState","setEditorState","state","setState","rules","setRules","editor","useRef","fetchRules","useEffect","current","focus","handleFocuse","e","value","target","set","decorator","onChangeRule","name","newRules","isChanged","handelAddRule","exist","filter","newRule","handelUpdateRule","handleDeleteRule","splice","onReplace","theRules","contentState","getCurrentContent","i","selectionsToReplace","blockMap","getBlockMap","parseInt","end","blockKey","getKey","blockSelection","SelectionState","merge","anchorOffset","focusOffset","push","selectionState","Modifier","replaceText","ref","onChange","align","type","isChecked","onClick","width","height","src","ReplaceIcon","alt","AddIcon","placeholder","onFocus","preventDefault","map","key","DeleteIcon","EditIcon","onChangeCheck","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f11f22e9.chunk.js","sourcesContent":["export const getRules = async () => {\r\n\ttry {\r\n\t\tconst res = await fetch('https://my-json-server.typicode.com/MrError9/JsonDB/rules');\r\n\t\tconst result = await res.json();\r\n\t\treturn result;\r\n\t} catch (error) {\r\n\t\talert(`There was an error fetching rules \\n Error: ${error}`);\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nexport const addRule = async (rule) => {\r\n\tconst { text, replace} = rule\r\n\ttry {\r\n\t\tconst res = await fetch('https://my-json-server.typicode.com/MrError9/JsonDB/rules', {\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttext,\r\n\t\t\t\treplace,\r\n\t\t\t\tchecked: true\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'POST'\r\n\t\t});\r\n\t\tconst result = await res.json();\r\n\t\tconsole.log('THIS IS ADD RESULT', result);\r\n\t\treturn result;\r\n\t} catch (error) {\r\n\t\tconsole.log('THERE WAS AN ERROR', error);\r\n\t\talert(`There was an error ADDING a rule \\n Error: ${error}`);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const updateRule = async (rule) => {\r\n\tconst { id, text, replace, checked} = rule\r\n\ttry {\r\n\t\tconst res = await fetch(`https://my-json-server.typicode.com/MrError9/JsonDB/rules/${id}`, {\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttext,\r\n\t\t\t\treplace,\r\n\t\t\t\tchecked\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'PUT'\r\n\t\t});\r\n\t\tconst result = await res.json();\r\n\t\talert(`Rule updated succesfully `);\r\n\t\treturn result;\r\n\t} catch (error) {\r\n\t\talert(`There was an error UPDATEING a rule \\n Error: ${error}`);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const deleteRule = async (id) => {\r\n\ttry {\r\n\t\tconst res = await fetch(`https://my-json-server.typicode.com/MrError9/JsonDB/rules/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'DELETE'\r\n\t\t});\r\n\t\tconst result = await res.json();\r\n\t\talert(`Rule deleted succesfully `);\r\n\t\treturn result;\r\n\t} catch (error) {\r\n\t\talert(`There was an error DELETEING a rule \\n Error: ${error}`);\r\n\t\treturn null;\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\n// Editor from draft\nimport { Editor, EditorState, CompositeDecorator, SelectionState, Modifier } from 'draft-js';\n// Database actions\nimport { getRules, addRule, updateRule, deleteRule } from './db-actions';\n// Icons\nimport DeleteIcon from './icons/delete.svg';\nimport EditIcon from './icons/floppy-disk.svg';\nimport ReplaceIcon from './icons/find.svg';\nimport AddIcon from './icons/plus.svg';\n\nconst specialCharacters = [ '\\\\', '.', '+', '*', '?', '^', '$', '(', ')', '[', ']', '{', '}', '|' ];\n\nconst findWithRegex = (regex, contentBlock, callback) => {\n\tconst text = contentBlock.getText();\n\tlet index = 0;\n\tlet matchArr, start, end;\n\twhile ((matchArr = regex.exec(text)) !== null) {\n\t\tstart = matchArr.index;\n\t\tend = start + matchArr[0].length;\n\t\tcallback(start, end, index);\n\t\tindex++;\n\t}\n};\nconst SearchHighlight = (props) => <span className=\"search-and-replace-highlight\">{props.children}</span>;\n\nconst generateDecorator = (highlightTerm) => {\n\tspecialCharacters.forEach((sc) => {\n\t\thighlightTerm = highlightTerm.replaceAll(sc, '\\\\' + sc);\n\t});\n\tconst regex = new RegExp(highlightTerm, 'g');\n\treturn new CompositeDecorator([\n\t\t{\n\t\t\tstrategy: (contentBlock, callback) => {\n\t\t\t\tif (highlightTerm !== '') {\n\t\t\t\t\tfindWithRegex(regex, contentBlock, callback);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcomponent: SearchHighlight\n\t\t}\n\t]);\n};\n\nfunction App() {\n\tconst [ editorState, setEditorState ] = React.useState(EditorState.createEmpty());\n\tconst [ state, setState ] = useState({ text: '', replace: '' });\n\tconst [ rules, setRules ] = useState([]);\n\tconsole.log('this is the app okay okay okay okay okay okay pokay okay');\n\tconst editor = React.useRef(null);\n\tfunction focusEditor() {\n\t\teditor.current.focus();\n\t}\n\n\tconst fetchRules = async () => {\n\t\tconst rules = await getRules();\n\t\tsetRules(rules);\n\t};\n\n\tuseEffect(() => {\n\t\tfocusEditor();\n\t\tfetchRules();\n\t}, []);\n\n\tconst onChangeSearch = (e) => {\n\t\te.preventDefault();\n\t\tconst text = e.target.value;\n\t\tsetState({ ...state, text });\n\t\tsetEditorState(EditorState.set(editorState, { decorator: generateDecorator(text) }));\n\t};\n\n\tconst handleFocuse = (e) => {\n\t\tconst { value } = e.target;\n\t\tsetEditorState(EditorState.set(editorState, { decorator: generateDecorator(value) }));\n\t};\n\n\tconst onChangeReplace = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\treplace: e.target.value\n\t\t});\n\t};\n\n\tconst onChangeRule = (e, index) => {\n\t\tconst { value, name } = e.target;\n\t\tconst newRules = rules;\n\t\tname === 'search' ? (newRules[index].text = value) : (newRules[index].replace = value);\n\t\tif (name === 'search') setEditorState(EditorState.set(editorState, { decorator: generateDecorator(value) }));\n\t\tnewRules[index].isChanged = true;\n\t\tsetRules([ ...newRules ]);\n\t};\n\n\tconst onChangeCheck = (e, index) => {\n\t\tconst isChecked = e.target.checked;\n\t\tconst newRules = rules;\n\t\tnewRules[index].checked = isChecked;\n\t\tnewRules[index].isChanged = true;\n\t\tsetRules([ ...newRules ]);\n\t};\n\n\tconst handelAddRule = async () => {\n\t\tconst exist = rules.filter((rule) => rule.text === state.text && rule.replace === state.replace);\n\n\t\tif (state.replace !== '' && state.text !== '' && exist.length < 1) {\n\t\t\tconst newRule = await addRule(state);\n\t\t\tif (newRule !== null) {\n\t\t\t\tsetRules([ ...rules, newRule ]);\n\t\t\t\tsetState({ text: '', replace: '' });\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handelUpdateRule = async (rule, index) => {\n\t\tif (rule.text !== '' && rule.replace !== '') {\n\t\t\tconst res = await updateRule(rule);\n\t\t\tconst newRules = rules;\n\t\t\tnewRules[index].isChanged = false;\n\t\t\tif (res !== null) setRules([ ...newRules ]);\n\t\t}\n\t};\n\n\tconst handleDeleteRule = async (rule, index) => {\n\t\tconst res = await deleteRule(rule.id);\n\t\tconst newRules = rules;\n\t\tnewRules.splice(index, 1);\n\t\tif (res) setRules([ ...newRules ]);\n\t};\n\n\tconst handleCheckAll = (e) => {\n\t\tconst newRules = rules;\n\t\tconst isChecked = e.target.checked;\n\t\tfor (let index = 0; index < newRules.length; index++) {\n\t\t\tif (newRules[index].checked !== isChecked) {\n\t\t\t\tnewRules[index].checked = isChecked;\n\t\t\t\tnewRules[index].isChanged = true;\n\t\t\t}\n\t\t}\n\t\tsetRules([ ...rules ]);\n\t};\n\n\tconst onReplace = (theRules) => {\n\t\tlet contentState = editorState.getCurrentContent();\n\t\tif (state.text !== '' && state.replace !== '') theRules = [ ...theRules, { ...state, checked: true } ];\n\t\tfor (let i = 0; i < theRules.length; i++) {\n\t\t\tlet { text, replace, checked } = theRules[i];\n\t\t\tif (!checked) continue;\n\t\t\tspecialCharacters.forEach((sc) => {\n\t\t\t\ttext = text.replaceAll(sc, '\\\\' + sc);\n\t\t\t});\n\t\t\tconst regex = new RegExp(text, 'g');\n\t\t\tconst selectionsToReplace = [];\n\t\t\t//contentState = editorState.getCurrentContent();\n\t\t\tconst blockMap = contentState.getBlockMap();\n\t\t\tconst length = parseInt(replace.length - text.length);\n\n\t\t\tblockMap.forEach((contentBlock) =>\n\t\t\t\tfindWithRegex(regex, contentBlock, (start, end, index) => {\n\t\t\t\t\tconst blockKey = contentBlock.getKey();\n\t\t\t\t\tconst blockSelection = SelectionState.createEmpty(blockKey).merge({\n\t\t\t\t\t\tanchorOffset: start + index * length,\n\t\t\t\t\t\tfocusOffset: end + index * length\n\t\t\t\t\t});\n\n\t\t\t\t\tselectionsToReplace.push(blockSelection);\n\t\t\t\t\tconsole.log('THIS IS BLOCK SELECTION', blockSelection);\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tselectionsToReplace.forEach((selectionState) => {\n\t\t\t\tcontentState = Modifier.replaceText(contentState, selectionState, replace);\n\t\t\t});\n\t\t}\n\n\t\tsetEditorState(EditorState.push(editorState, contentState));\n\t};\n\n\treturn (\n\t\t<div className={'all-container'}>\n\t\t\t<section className={'editor-section'}>\n\t\t\t\t<Editor ref={editor} editorState={editorState} onChange={setEditorState} />\n\t\t\t</section>\n\t\t\t<section className={'rules-section'}>\n\t\t\t\t<div className=\"search-and-replace\">\n\t\t\t\t\t<small align=\"right\">\n\t\t\t\t\t\t<input name=\"isGoing\" type=\"checkbox\" onChange={handleCheckAll} />گشت\n\t\t\t\t\t</small>\n\t\t\t\t\t<button className={'replace-btn'} onClick={() => onReplace(rules)}>\n\t\t\t\t\t\tپەسەندکردن\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-and-replace\">\n\t\t\t\t\t<div className={'actions'}>\n\t\t\t\t\t\t<img width=\"24px\" height=\"24px\" src={ReplaceIcon} onClick={() => onReplace([])} alt=\"replace\" />\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\twidth=\"24px\"\n\t\t\t\t\t\t\theight=\"24px\"\n\t\t\t\t\t\t\tonClick={handelAddRule}\n\t\t\t\t\t\t\tclassName={state.replace && state.text ? '' : 'disabled'}\n\t\t\t\t\t\t\tsrc={AddIcon}\n\t\t\t\t\t\t\talt=\"add\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input value={state.replace} onChange={onChangeReplace} placeholder=\"جێگرەوە\" />\n\t\t\t\t\t<input value={state.text} onFocus={handleFocuse} onChange={onChangeSearch} placeholder=\"وشە\" />\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t{rules.map((rule, index) => (\n\t\t\t\t\t<div className=\"search-and-replace\" key={index}>\n\t\t\t\t\t\t<div className={'actions'}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleDeleteRule(rule, index);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\twidth=\"16px\"\n\t\t\t\t\t\t\t\theight=\"16px\"\n\t\t\t\t\t\t\t\tsrc={DeleteIcon}\n\t\t\t\t\t\t\t\talt=\"delete\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tonClick={() => handelUpdateRule(rule, index)}\n\t\t\t\t\t\t\t\tclassName={rule.isChanged === true ? '' : 'disabled'}\n\t\t\t\t\t\t\t\twidth=\"16px\"\n\t\t\t\t\t\t\t\theight=\"16px\"\n\t\t\t\t\t\t\t\tsrc={EditIcon}\n\t\t\t\t\t\t\t\talt=\"update\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tonChangeCheck(e, index);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname=\"isGoing\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={rule.checked}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input name=\"replace\" value={rule.replace} onChange={(e) => onChangeRule(e, index)} placeholder=\"جێگرەوە\" />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tvalue={rule.text || ''}\n\t\t\t\t\t\t\tonFocus={handleFocuse}\n\t\t\t\t\t\t\tonChange={(e) => onChangeRule(e, index)}\n\t\t\t\t\t\t\tplaceholder=\"وشە\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"draft-js/dist/Draft.css\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// check uncheck all & single \n// show & hide all & single \n// add, update, delete rules \n\n// 100vh\n// 100%\n//over flow auto\n// text overflow","module.exports = __webpack_public_path__ + \"static/media/delete.28438a18.svg\";","module.exports = __webpack_public_path__ + \"static/media/floppy-disk.9e5413c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/find.fa7651f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.44133772.svg\";"],"sourceRoot":""}